<!-- ===== #1. ojdbc.jar 를 받기 위한 리포지터리 주소 변경 =====  -->
	   <repositories> 
      <repository>
         <id>codelds</id>
            <url>https://code.lds.org/nexus/content/groups/main-repo</url>
      </repository>
      
<!-- ===== #2. myBatis 관련 jar 추가하기 ===== -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-orm</artifactId>
          <version>${org.springframework-version}</version>
      </dependency>
      
      <dependency>
          <groupId>org.mybatis</groupId>
          <artifactId>mybatis</artifactId>
          <version>3.4.6</version>
      </dependency>
      
      <dependency>
          <groupId>org.mybatis</groupId>
          <artifactId>mybatis-spring</artifactId>
          <version>1.3.2</version>
      </dependency>
		
		<!-- https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc6 -->
		<dependency>
		    <groupId>com.oracle.database.jdbc</groupId>
		    <artifactId>ojdbc6</artifactId>
		    <version>11.2.0.4</version>
		</dependency>
		
		<dependency>
          <groupId>commons-dbcp</groupId>
          <artifactId>commons-dbcp</artifactId>
          <version>1.4</version>
      </dependency>
      
      <!-- ===== #3. dependency aspectjweaver 추가하기 ===== -->
      <dependency>
         <groupId>org.aspectj</groupId>
         <artifactId>aspectjweaver</artifactId>
         <version>${org.aspectj-version}</version>
      </dependency>
      
      <!-- 추가하기 -->
      <!-- CGLib 소개
           CGLIB는 코드 생성 라이브러리로서(Code Generator Library) 
             런타임에 동적으로 자바 클래스의 프록시를 생성해주는 기능을 제공한다. 
           CGLIB를 사용하면 매우 쉽게 프록시 객체를 생성할 수 있으며, 성능 또한 우수하다. 
             더불어, 인터페이스가 아닌 클래스에 대해서 동적 프록시를 생성할 수 있기 때문에 
             다양한 프로젝트에서 널리 사용되고 있다. 
           Spring은 프록시 기반의 AOP를 구현할 때 CGLIB를 사용하고 있다.
           
           CGLib 란? java 에서 프록시 구현시 유용하게 쓸 수 있는 라이브러리.
           
                    ※ 스프링 AOP구현 방식은 2가지가 있습니다.

         1. 대상객체가 인터페이스 구현방식으로 구현되었을 경우
             -> 일반적인 proxy pattern 을 이용하여 AOP구현
         
         2. 대상객체가 인터페이스를 구현 안했을 경우
             -> CGLIB 라이브러리를 이용하여 구현


         CGLIB이란,
         동적으로 대상객체를 상속하는 클래스를 만들어 프록시를 구현한후
         필터클래스를 이용하여 공통의 관심사(Aspect)적용
         -->
        <!-- ===== #4. AOP 구현시 필요한 프록시객체 생성관련 jar 추가하기 ===== -->
      <dependency>
         <groupId>cglib</groupId>
         <artifactId>cglib</artifactId>
         <version>3.2.9</version>
      </dependency>
      
      <!-- ===== #5. Spring jdbc 추가 ===== -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-jdbc</artifactId>
         <version>${org.springframework-version}</version>
      </dependency> 
